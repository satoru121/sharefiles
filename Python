import time

# 書き込み用関数
def i2cwrite_1byte(deviceaddress, address, data):
    i2c.writeto_mem(int(deviceaddress), address, bytes([data]))
    time.sleep_ms(1)  # I2C待機

# 読み込み用関数
def i2cread_1byte(deviceaddress, address):
    dataread = i2c.readfrom_mem(int(deviceaddress), address, 1)
    time.sleep_us(500)  # I2C待機
    return dataread[0]

# 改善したエラーダンプ関数
def i2c_errdump():
    device_addresses = [0x20, 0x21, 0x22, 0x23]
    banks = range(0x00, 0x05)  # 0x00 〜 0x04
    output_file = "i2c_dump_result.txt"
    
    with open(output_file, 'w') as f:
        for deviceaddress in device_addresses:
            for bank in banks:
                i2cwrite_1byte(deviceaddress, 0xFF, bank)  # bank指定で書き込み
                f.write(f"\n=== Device Address: {hex(deviceaddress)}, Bank: {hex(bank)} ===\n")
                print(f"\n=== Device Address: {hex(deviceaddress)}, Bank: {hex(bank)} ===")
                
                for address in range(0x00, 0x100):  # 0x00 〜 0xFF
                    try:
                        data = i2cread_1byte(deviceaddress, address)
                        log = f"Read Data: {hex(deviceaddress)} / {hex(bank)} / {hex(address)} / {hex(data)}"
                        print(log)
                        f.write(log + "\n")
                    except Exception as e:
                        error_log = f"Error at Device: {hex(deviceaddress)}, Bank: {hex(bank)}, Address: {hex(address)} - {str(e)}"
                        print(error_log)
                        f.write(error_log + "\n")

                    time.sleep_ms(10)  # 10msの待機

# 実行
i2c_errdump()
time.sleep_ms(5)





Option Explicit

' FT260 APIの関数を定義
Declare PtrSafe Function FT260_OpenByIndex Lib "FT260API.dll" (ByVal index As Integer, ByRef handle As Long) As Long
Declare PtrSafe Function FT260_Close Lib "FT260API.dll" (ByVal handle As Long) As Long
Declare PtrSafe Function FT260_I2CMaster_Write Lib "FT260API.dll" (ByVal handle As Long, ByVal deviceAddress As Byte, ByVal flag As Byte, ByRef buffer As Any, ByVal bufferSize As Long, ByRef bytesWritten As Long) As Long
Declare PtrSafe Function FT260_I2CMaster_Read Lib "FT260API.dll" (ByVal handle As Long, ByVal deviceAddress As Byte, ByVal flag As Byte, ByRef buffer As Any, ByVal bufferSize As Long, ByRef bytesRead As Long) As Long

Sub ExecuteI2CCommands()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    Dim handle As Long
    Dim status As Long
    
    ' ワークシート設定
    Set ws = ThisWorkbook.Sheets(1) ' シート1を使用
    lastRow = ws.Cells(ws.Rows.Count, 2).End(xlUp).Row ' B列（I2CADR）の最終行を取得
    
    ' FT260を開く
    status = FT260_OpenByIndex(0, handle)
    If status <> 0 Then
        MsgBox "FT260の接続に失敗しました。エラーコード: " & status, vbCritical
        Exit Sub
    End If
    
    ' 各行のデータを順に処理
    For i = 5 To lastRow  ' 5行目から最終行まで処理
        Dim deviceAddr As Byte
        Dim bank As Byte
        Dim addr As Byte
        Dim readSize As Byte
        Dim writeData As Byte
        Dim result As Byte
        Dim bytesProcessed As Long
        
        ' セルの値を取得し、16進数として扱う
        deviceAddr = CByte("&H" & ws.Cells(i, 2).Text) ' I2CADR (B列)
        bank = CByte("&H" & ws.Cells(i, 3).Text)       ' BANK (C列)
        addr = CByte("&H" & ws.Cells(i, 4).Text)       ' ADD (D列)
        
        ' Read処理
        If ws.Cells(i, 5).Value <> "" Then
            readSize = CByte("&H" & ws.Cells(i, 5).Text) ' READ (E列)
            
            ' レジスタアドレスを送信
            Dim writeBuffer(0) As Byte
            writeBuffer(0) = addr
            status = FT260_I2CMaster_Write(handle, deviceAddr, 0, writeBuffer(0), 1, bytesProcessed)
            If status <> 0 Then
                ws.Cells(i, 7).Value = "ERR"
                GoTo NextIteration
            End If
            
            ' データを読み取る
            Dim readBuffer(0) As Byte
            status = FT260_I2CMaster_Read(handle, deviceAddr, 0, readBuffer(0), readSize, bytesProcessed)
            If status = 0 Then
                ws.Cells(i, 7).Value = Right("0" & Hex(readBuffer(0)), 2) ' 16進数フォーマット
            Else
                ws.Cells(i, 7).Value = "ERR"
            End If
        End If
        
        ' Write処理
        If ws.Cells(i, 6).Value <> "" Then
            writeData = CByte("&H" & ws.Cells(i, 6).Text) ' WRITE (F列)
            
            Dim writeDataBuffer(1) As Byte
            writeDataBuffer(0) = addr
            writeDataBuffer(1) = writeData
            
            status = FT260_I2CMaster_Write(handle, deviceAddr, 0, writeDataBuffer(0), 2, bytesProcessed)
            If status <> 0 Then
                ws.Cells(i, 7).Value = "ERR"
            End If
        End If
        
NextIteration:
    Next i
    
    ' FT260を閉じる
    FT260_Close handle
    
    MsgBox "I2C処理が完了しました。", vbInformation
End Sub
