Sub ConvertHexToBinary()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    Dim hexValue As String
    Dim binaryValue As String

    ' シートを指定
    Set ws = ThisWorkbook.Sheets("Sheet1")

    ' A列の最終行を取得
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' A列のデータをループしてB列に変換した値を記入
    For i = 1 To lastRow
        hexValue = ws.Cells(i, 1).Value

        ' 16進数を10進数に変換し、それを2進数に変換
        If Left(hexValue, 2) = "0x" Then
            hexValue = Mid(hexValue, 3) ' "0x"を除去
        End If

        On Error Resume Next
        binaryValue = WorksheetFunction.Dec2Bin(CLng("&H" & hexValue))
        On Error GoTo 0

        ws.Cells(i, 2).Value = binaryValue
    Next i

    MsgBox "変換が完了しました。", vbInformation
End Sub



Sub SimpleConvertI2CFormat_Underscore()
    Dim inputFile As String
    Dim outputFile As String
    Dim inputLine As String
    Dim inputNum As Integer, outputNum As Integer
    Dim parts() As String
    Dim addr As String, data As String

    ' ファイルパス（Excelファイルと同じ場所に input.txt を置いてください）
    inputFile = ThisWorkbook.Path & "\input.txt"
    outputFile = ThisWorkbook.Path & "\output.txt"

    ' 入出力ファイルを開く
    inputNum = FreeFile
    Open inputFile For Input As #inputNum

    outputNum = FreeFile
    Open outputFile For Output As #outputNum

    ' 行ごとに処理
    Do While Not EOF(inputNum)
        Line Input #inputNum, inputLine
        inputLine = Trim(inputLine)

        If LCase(Left(inputLine, 5)) = "write" Then
            ' "WRITE" を削除し、残りをカンマで分解
            inputLine = Mid(inputLine, 6)
            parts = Split(inputLine, ",")

            If UBound(parts) >= 1 Then
                addr = Trim(parts(0))
                data = Trim(parts(1))
                ' アンダーバー形式で出力
                Print #outputNum, "i2cwrite_1byte(" & addr & ", " & data & ")"
            End If
        End If
    Loop

    ' ファイルを閉じる
    Close #inputNum
    Close #outputNum

    MsgBox "変換が完了しました！（アンダーバー版）", vbInformation
End Sub



Sub ConvertWRITEOnly()
    Dim inputFile As String
    Dim outputFile As String
    Dim inputLine As String
    Dim inputNum As Integer, outputNum As Integer
    Dim parts() As String
    Dim addr As String, data As String

    ' ファイルパス（Excelファイルと同じフォルダに input.txt を用意）
    inputFile = ThisWorkbook.Path & "\input.txt"
    outputFile = ThisWorkbook.Path & "\output.txt"

    ' ファイルオープン
    inputNum = FreeFile
    Open inputFile For Input As #inputNum

    outputNum = FreeFile
    Open outputFile For Output As #outputNum

    Do While Not EOF(inputNum)
        Line Input #inputNum, inputLine
        inputLine = Trim(inputLine)

        If LCase(Left(inputLine, 5)) = "write" Then
            ' WRITE命令を変換
            parts = Split(Mid(inputLine, 6), ",")
            If UBound(parts) >= 1 Then
                addr = Trim(parts(0))
                data = Trim(parts(1))
                Print #outputNum, "i2cwrite_1byte(" & addr & ", " & data & ")"
            Else
                ' WRITEでもフォーマットが正しくない場合はそのまま出力
                Print #outputNum, inputLine
            End If
        Else
            ' WRITE命令以外はそのまま出力
            Print #outputNum, inputLine
        End If
    Loop

    Close #inputNum
    Close #outputNum

    MsgBox "WRITE命令だけを変換しました。", vbInformation
End Sub





Sub ConvertWRITECommandFlexible()
    Dim inputFile As String
    Dim outputFile As String
    Dim inputLine As String
    Dim inputNum As Integer, outputNum As Integer
    Dim lineLower As String
    Dim parts() As String
    Dim i As Integer
    Dim addr As String
    Dim dataBytes As String

    ' ファイルパス（Excelファイルと同じフォルダに input.txt を置く）
    inputFile = ThisWorkbook.Path & "\input.txt"
    outputFile = ThisWorkbook.Path & "\output.txt"

    inputNum = FreeFile
    Open inputFile For Input As #inputNum

    outputNum = FreeFile
    Open outputFile For Output As #outputNum

    Do While Not EOF(inputNum)
        Line Input #inputNum, inputLine
        lineLower = LCase(inputLine)

        If Left(lineLower, 5) = "write" Then
            ' WRITE命令の後ろを取り出してカンマで分割（スペースは無視）
            parts = Split(Mid(inputLine, 6), ",")

            If UBound(parts) >= 1 Then
                addr = Trim(parts(0))
                dataBytes = ""
                For i = 1 To UBound(parts)
                    If LCase(Trim(parts(i))) <> "stop" Then
                        dataBytes = dataBytes & Trim(parts(i)) & ", "
                    End If
                Next i

                ' 最後のカンマとスペースを削除
                If Right(dataBytes, 2) = ", " Then
                    dataBytes = Left(dataBytes, Len(dataBytes) - 2)
                End If

                Print #outputNum, "i2cwrite_1byte(" & addr & ", " & dataBytes & ")"
            Else
                ' WRITE命令の形式がおかしい場合はそのまま
                Print #outputNum, inputLine
            End If
        Else
            ' WRITE以外はそのまま出力
            Print #outputNum, inputLine
        End If
    Loop

    Close #inputNum
    Close #outputNum

    MsgBox "WRITE命令の変換が完了しました！", vbInformation
End Sub
