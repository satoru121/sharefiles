import os
import sys

# ファームウェアのバージョン情報を取得
print("=== MicroPython ファームウェア情報 ===")
print(f"MicroPython バージョン: {os.uname().release}")
print(f"プラットフォーム: {os.uname().sysname}")
print(f"マシン情報: {os.uname().machine}")

# Pythonバージョン情報を取得
print("\n=== Python バージョン情報 ===")
print(f"Python バージョン: {sys.version}")


import gc

# メモリ使用状況を表示
print("メモリ使用状況:")
print("空きメモリ:", gc.mem_free(), "バイト")
print("合計メモリ:", gc.mem_alloc() + gc.mem_free(), "バイト")

# ガベージコレクションを実行
gc.collect()

# 再度メモリ使用状況を確認
print("ガベージコレクション後の空きメモリ:", gc.mem_free(), "バイト")

import gc

def check_memory(label):
    print(f"{label}:")
    print(f"  使用メモリ: {gc.mem_alloc()} バイト")
    print(f"  空きメモリ: {gc.mem_free()} バイト")
    gc.collect()

# 必要な箇所に挿入して確認
check_memory("Before read")

Sub ConvertDataFormat()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    Dim inputData As String
    Dim outputData As String
    Dim parts() As String
    
    ' 対象のワークシートを設定
    Set ws = ThisWorkbook.Sheets(1) ' 1つ目のシートを対象としています
    
    ' A列の最終行を取得
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row
    
    ' データ変換処理
    For i = 1 To lastRow
        inputData = ws.Cells(i, 1).Value ' A列のデータを取得
        If inputData Like "Write * *" Then ' フォーマットに一致する場合
            ' 空白で分割
            parts = Split(inputData, " ")
            If UBound(parts) = 2 Then ' 要素数が3つ（"Write", x, y）の場合
                ' 指定形式に変換
                outputData = "writei2c(" & parts(1) & "," & parts(2) & ")"
                ws.Cells(i, 2).Value = outputData ' B列に出力
            End If
        End If
    Next i
    
    MsgBox "データの変換が完了しました！", vbInformation
End Sub

pdbを使ったブレークポイント設定
import pdb

for i in range(10):
    print(f"ループ中: {i}")
    if i == 5:
        pdb.set_trace()  # ここでデバッガが起動
    print("次のループへ")

n（次の行に進む）
c（次のブレークポイントまで進む）
q（デバッグを終了）
